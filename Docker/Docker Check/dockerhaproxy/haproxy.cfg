#cấu hình chung của file config, cứ để mặc định như v
global
    maxconn 4096                    # giới hạn kết nối đến Proxy
    daemon
    log 127.0.0.1   local0
    log 127.0.0.1   local1 notice

defaults
    timeout connect 10s
    timeout client 30s
    timeout server 30s

    log global
    mode http                           # mode tcp
    option httplog                      # option tcplog
    maxconn 3000

    stats enable #cho phép truy cập thống kê
    # option forwardfor
    # option http-server-close
    stats uri /haproxyStats             # URL trang thống kê
    stats auth admin:admin123           # user/pass truy cập trang thống kê http://localhost:8080/haproxyStats


# định nghĩa khối backend
# file cfg khối backend bắt đầu bằng 'backend <tên khối backend>'
# bên trong có 3 server: 'server <tên server> ip:cổng' và ip ở đây là tên miền để DNS tự đổi cx đc
# từ khóa check ở cuối để bảo haproxy liên tục gửi gói tin đến địa chỉ ip đó để kiểm tra xem server còn hđ k
# 'balance <thuật toán cân bằng tải sử dụng>' thì roundrobin trong haproxy sẽ xoay vòng request cho server này thì 
# lần sau sẽ gửi tiếp cho server khác; leastcoin sẽ chuyển cho server có ít kết nối nhất; source chọn server dựa 
# vào ip của user VD server1 xử lý user này thì lần sau user này gửi tới sẽ vẫn là server1 xử lý
backend bke_80_test2
    balance roundrobin
    option httpclose
    option forwardfor
    server server1 widipedia.org:80 check
    server server2 bing.com:80 check
    server server3 google.com:80 check

backend bke_80_test1
    balance roundrobin
    option httpclose
    option forwardfor
    server server1 yahoo.com:80 check

# do xử lý SSL nên dùng mode tcp, mặc định là dùng mode http
backend bke_443
    mode tcp
    balance source
    option ssl-hello-chk
    server server1 widipedia.org:443 check

# định nghĩa khối front-end
# bind để chặn lại các yêu cầu gửi tới cổng 80 và thực hiện lệnh bên dưới
# acl là access control list lọc truy cập. 'acl <tên acl> <biểu thức kiểm tra>'
# hdr_dom(host) của haproxy trả ra uri chuỗi gửi đến. Tham số -i để check nó phù hợp với chuỗi viết đằng sau không
frontend http-in
    bind *:80

    acl host_test1 hdr_dom(host) -i testhaproxy1.com #nếu đúng thì host_test1 trả về true
    acl host_test2 hdr_dom(host) -i testhaproxy2.com

    use_backend bke_80_test1 if host_test1 #true thì gửi đến backend nào
    use_backend bke_80_test2 if host_test2

frontend https-in
    bind *:443
    mode tcp
    option tcplog
    tcp-request inspect-delay 10s #config tự có thôi
    tcp-request content accept if { req_ssl_hello_type1 }

    acl acl1 req.ssl_sni -m end testhaproxy1.com # cách viết check bên front end nó hơi kỳ tí, cơ chế tương tự trên
    acl acl2 req.ssl_sni -m end testhaproxy2.com

    use_backend bke_443 if acl1 || acl2
